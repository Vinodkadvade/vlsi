 
LIBRARY ieee; 
USE ieee.std_logic_1164.ALL; -- Uncomment the following library declaration if using -- arithmetic functions with Signed or Unsigned values --USE ieee.numeric_std.ALL; 
ENTITY Alu_tb IS 
END Alu_tb; 
ARCHITECTURE behavior OF Alu_tb IS 
    -- Component Declaration for the Unit Under Test (UUT) 
    COMPONENT Alu 
    PORT( 
         a : IN  std_logic_vector(3 downto 0); 
         b : IN  std_logic_vector(3 downto 0); 
         s : IN  std_logic_vector(3 downto 0); 
         f : OUT  std_logic_vector(3 downto 0); 
         m : IN  std_logic 
        ); 
    END COMPONENT; 
   --Inputs 
   signal a : std_logic_vector(3 downto 0) := (others => '0'); 
   signal b : std_logic_vector(3 downto 0) := (others => '0'); 
   signal s : std_logic_vector(3 downto 0) := (others => '0'); 
   signal m : std_logic := '0'; 
  --Outputs 
   signal f : std_logic_vector(3 downto 0); 
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 
   --constant <clock>_period : time := 10 ns; 
BEGIN -- Instantiate the Unit Under Test (UUT) 
   uut: Alu PORT MAP ( 
          a => a, 
          b => b, 
          s => s, 
          f => f, 
          m => m 
        ); 
   -- Clock process definitions 
   --<clock>_process :process 
   --begin --<clock> <= '0'; --wait for <clock>_period/2; --<clock> <= '1'; --wait for <clock>_period/2; 
   --end process; 
   -- Stimulus process 
   stim_proc: process 
   begin
a<="0000";b<="0001";s<="0011"; 
assert f<="1111"; report "ERROR IN LOGIC"; 
      -- hold reset state for 100 ns. 
      wait for 100 ns; 
 
a<="0011";b<="0100";s<="0001"; 
assert f<="0111"; report "ERROR IN LOGIC"; 
      -- hold reset state for 100 ns. 
      wait for 100 ns; 
      --wait for <clock>_period*10; 
      -- insert stimulus here 
      wait; 
   end process; 
END; 