 
LIBRARY ieee; 
USE ieee.std_logic_1164.ALL; -- Uncomment the following library declaration if using -- arithmetic functions with Signed or Unsigned values --USE ieee.numeric_std.ALL; 
ENTITY eightasto1mux81_tb IS 
END eightasto1mux81_tb; 
ARCHITECTURE behavior OF eightasto1mux81_tb IS 
    -- Component Declaration for the Unit Under Test (UUT) 
    COMPONENT eightastoonemux81 
    PORT( 
         a : IN  std_logic_vector(7 downto 0); 
         s : IN  std_logic_vector(2 downto 0); 
         y : OUT  std_logic 
        ); 
    END COMPONENT; 
   --Inputs 
   signal a : std_logic_vector(7 downto 0) := (others => '0'); 
   signal s : std_logic_vector(2 downto 0) := (others => '0'); 
  --Outputs 
   signal y : std_logic; 
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 
   --constant <clock>_period : time := 10 ns; 
BEGIN -- Instantiate the Unit Under Test (UUT) 
   uut: eightastoonemux81 PORT MAP ( 
          a => a, 
          s => s, 
          y => y 
        ); 
   -- Clock process definitions 
   --<clock>_process :process 
   --begin --<clock> <= '0'; --wait for <clock>_period/2; --<clock> <= '1'; --wait for <clock>_period/2; 
   --end process; 
   -- Stimulus process 
   stim_proc: process 
   begin 
      -- hold reset state for 100 ns. 
      wait for 100 ns; 
s<= "000"; 
a(0)<= '1'; 
assert y<= '1' report "ERROR IN LOGIC"; 
wait for 100 ns; 
LIBRARY ieee; 
USE ieee.std_logic_1164.ALL; -- Uncomment the following library declaration if using -- arithmetic functions with Signed or Unsigned values --USE ieee.numeric_std.ALL; 
ENTITY eightasto1mux81_tb IS 
END eightasto1mux81_tb; 
ARCHITECTURE behavior OF eightasto1mux81_tb IS 
    -- Component Declaration for the Unit Under Test (UUT) 
    COMPONENT eightastoonemux81 
    PORT( 
         a : IN  std_logic_vector(7 downto 0); 
         s : IN  std_logic_vector(2 downto 0); 
         y : OUT  std_logic 
        ); 
    END COMPONENT; 
   --Inputs 
   signal a : std_logic_vector(7 downto 0) := (others => '0'); 
   signal s : std_logic_vector(2 downto 0) := (others => '0'); 
  --Outputs 
   signal y : std_logic; 
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 
   --constant <clock>_period : time := 10 ns; 
BEGIN -- Instantiate the Unit Under Test (UUT) 
   uut: eightastoonemux81 PORT MAP ( 
          a => a, 
          s => s, 
          y => y 
        ); 
   -- Clock process definitions 
   --<clock>_process :process 
   --begin --<clock> <= '0'; --wait for <clock>_period/2; --<clock> <= '1'; --wait for <clock>_period/2; 
   --end process; 
   -- Stimulus process 
   stim_proc: process 
   begin 
      -- hold reset state for 100 ns. 
      wait for 100 ns; 
s<= "000"; 
a(0)<= '1'; 
assert y<= '1' report "ERROR IN LOGIC"; 
wait for 100 ns;
s<= "001"; 
a(1)<= '0'; 
assert y<= '1' report "ERROR IN LOGIC"; 
wait for 100 ns; 
s<= "010"; 
a(2)<= '1'; 
assert y<= '1' report "ERROR IN LOGIC"; 
wait for 100 ns; 
s<= "011"; 
a(3)<= '0'; 
assert y<= '1' report "ERROR IN LOGIC"; 
wait for 100 ns; --wait for <clock>_period*10; -- insert stimulus here 
wait; 
end process; 
END;